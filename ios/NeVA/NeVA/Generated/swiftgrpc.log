File protos/util.proto
File protos/user.proto
File protos/suggestion.proto
File protos/user_history.proto
File protos/backend.proto
Service Backend
 Method Register
  input .neva.backend.RegisterRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method Login
  input .neva.backend.LoginRequest
  output .neva.backend.LoginReply
  client_streaming false
  server_streaming false
 Method UpdateUser
  input .neva.backend.UpdateUserRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method GetUser
  input .neva.backend.GetUserRequest
  output .neva.backend.GetUserReply
  client_streaming false
  server_streaming false
 Method SuggestionItemProposition
  input .neva.backend.SuggestionItemPropositionRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method GetMultipleSuggestions
  input .neva.backend.GetMultipleSuggestionsRequest
  output .neva.backend.GetMultipleSuggestionsReply
  client_streaming false
  server_streaming false
 Method TagProposition
  input .neva.backend.TagPropositionRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method TagValueProposition
  input .neva.backend.TagValuePropositionRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method GetSuggestionItemList
  input .neva.backend.GetSuggestionItemListRequest
  output .neva.backend.GetSuggestionItemListReply
  client_streaming false
  server_streaming false
 Method InformUserChoice
  input .neva.backend.InformUserChoiceRequest
  output .neva.backend.InformUserChoiceReply
  client_streaming false
  server_streaming false
 Method FetchUserHistory
  input .neva.backend.FetchUserHistoryRequest
  output .neva.backend.FetchUserHistoryReply
  client_streaming false
  server_streaming false
 Method CheckToken
  input .neva.backend.CheckTokenRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method RecordFeedback
  input .neva.backend.RecordFeedbackRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
 Method GetTags
  input .neva.backend.GetTagsRequest
  output .neva.backend.GetTagsReply
  client_streaming false
  server_streaming false
 Method GetColdStartCompletionStatus
  input .neva.backend.GetColdStartCompletionStatusRequest
  output .neva.backend.GetColdStartCompletionStatusReply
  client_streaming false
  server_streaming false
 Method GetColdStartItemList
  input .neva.backend.GetColdStartItemListRequest
  output .neva.backend.GetColdStartItemListReply
  client_streaming false
  server_streaming false
 Method RecordColdStartChoice
  input .neva.backend.RecordColdStartChoiceRequest
  output .neva.backend.GenericReply
  client_streaming false
  server_streaming false
SwiftProtobufPluginLibrary.Google_Protobuf_Compiler_CodeGeneratorRequest:
file_to_generate: "protos/backend.proto"
file_to_generate: "protos/suggestion.proto"
file_to_generate: "protos/user.proto"
file_to_generate: "protos/user_history.proto"
file_to_generate: "protos/util.proto"
compiler_version {
  major: 3
  minor: 5
  patch: 1
  suffix: ""
}
proto_file {
  name: "protos/util.proto"
  package: "neva.backend.util"
  message_type {
    name: "Timestamp"
    field {
      name: "seconds"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      json_name: "seconds"
    }
    field {
      name: "nanos"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "nanos"
    }
  }
  source_code_info {
    location {
      span: [0, 0, 7, 1]
    }
    location {
      path: [12]
      span: [0, 0, 18]
    }
    location {
      path: [2]
      span: [2, 8, 25]
    }
    location {
      path: [4, 0]
      span: [4, 0, 7, 1]
    }
    location {
      path: [4, 0, 1]
      span: [4, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [5, 2, 21]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [5, 2, 4, 19]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [5, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [5, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [5, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [6, 2, 19]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [6, 2, 5, 21]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [6, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [6, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [6, 17, 18]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "protos/user.proto"
  package: "neva.backend"
  dependency: "protos/util.proto"
  message_type {
    name: "LinkedAccount"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "token"
    }
    field {
      name: "social_media_type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.LinkedAccount.SocialMediaType"
      json_name: "socialMediaType"
    }
    enum_type {
      name: "SocialMediaType"
      value {
        name: "INVALID_SOCIAL_MEDIA_TYPE"
        number: 0
      }
      value {
        name: "FACEBOOK"
        number: 1
      }
    }
  }
  message_type {
    name: "User"
    field {
      name: "user_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "userId"
    }
    field {
      name: "email"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "email"
    }
    field {
      name: "password"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "password"
    }
    field {
      name: "name"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "date_of_birth"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.util.Timestamp"
      json_name: "dateOfBirth"
    }
    field {
      name: "gender"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.User.Gender"
      json_name: "gender"
    }
    field {
      name: "weight"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_FLOAT
      json_name: "weight"
    }
    field {
      name: "photo"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "photo"
    }
    field {
      name: "status"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.User.Status"
      json_name: "status"
    }
    field {
      name: "register_date"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.util.Timestamp"
      json_name: "registerDate"
    }
    field {
      name: "linked_accounts"
      number: 11
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".neva.backend.LinkedAccount"
      json_name: "linkedAccounts"
    }
    enum_type {
      name: "Gender"
      value {
        name: "INVALID_GENDER"
        number: 0
      }
      value {
        name: "MALE"
        number: 1
      }
      value {
        name: "FEMALE"
        number: 2
      }
    }
    enum_type {
      name: "Status"
      value {
        name: "INVALID_STATUS"
        number: 0
      }
      value {
        name: "INACTIVE"
        number: 1
      }
      value {
        name: "ACTIVE"
        number: 2
      }
    }
  }
  source_code_info {
    location {
      span: [0, 0, 43, 1]
    }
    location {
      path: [12]
      span: [0, 0, 18]
    }
    location {
      path: [3, 0]
      span: [2, 7, 26]
    }
    location {
      path: [2]
      span: [4, 8, 20]
    }
    location {
      path: [4, 0]
      span: [6, 0, 14, 1]
    }
    location {
      path: [4, 0, 1]
      span: [6, 8, 21]
    }
    location {
      path: [4, 0, 4, 0]
      span: [7, 2, 10, 3]
    }
    location {
      path: [4, 0, 4, 0, 1]
      span: [7, 7, 22]
    }
    location {
      path: [4, 0, 4, 0, 2, 0]
      span: [8, 4, 34]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 1]
      span: [8, 4, 29]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 2]
      span: [8, 32, 33]
    }
    location {
      path: [4, 0, 4, 0, 2, 1]
      span: [9, 4, 17]
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 1]
      span: [9, 4, 12]
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 2]
      span: [9, 15, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [12, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [12, 2, 10, 4]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [12, 9, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [12, 17, 18]
    }
    location {
      path: [4, 0, 2, 1]
      span: [13, 2, 40]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [13, 2, 12, 19]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [13, 2, 17]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [13, 18, 35]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [13, 38, 39]
    }
    location {
      path: [4, 1]
      span: [16, 0, 43, 1]
    }
    location {
      path: [4, 1, 1]
      span: [16, 8, 12]
    }
    location {
      path: [4, 1, 4, 0]
      span: [17, 2, 21, 3]
    }
    location {
      path: [4, 1, 4, 0, 1]
      span: [17, 7, 13]
    }
    location {
      path: [4, 1, 4, 0, 2, 0]
      span: [18, 4, 23]
    }
    location {
      path: [4, 1, 4, 0, 2, 0, 1]
      span: [18, 4, 18]
    }
    location {
      path: [4, 1, 4, 0, 2, 0, 2]
      span: [18, 21, 22]
    }
    location {
      path: [4, 1, 4, 0, 2, 1]
      span: [19, 4, 13]
    }
    location {
      path: [4, 1, 4, 0, 2, 1, 1]
      span: [19, 4, 8]
    }
    location {
      path: [4, 1, 4, 0, 2, 1, 2]
      span: [19, 11, 12]
    }
    location {
      path: [4, 1, 4, 0, 2, 2]
      span: [20, 4, 15]
    }
    location {
      path: [4, 1, 4, 0, 2, 2, 1]
      span: [20, 4, 10]
    }
    location {
      path: [4, 1, 4, 0, 2, 2, 2]
      span: [20, 13, 14]
    }
    location {
      path: [4, 1, 4, 1]
      span: [23, 2, 27, 3]
    }
    location {
      path: [4, 1, 4, 1, 1]
      span: [23, 7, 13]
    }
    location {
      path: [4, 1, 4, 1, 2, 0]
      span: [24, 4, 23]
    }
    location {
      path: [4, 1, 4, 1, 2, 0, 1]
      span: [24, 4, 18]
    }
    location {
      path: [4, 1, 4, 1, 2, 0, 2]
      span: [24, 21, 22]
    }
    location {
      path: [4, 1, 4, 1, 2, 1]
      span: [25, 4, 17]
    }
    location {
      path: [4, 1, 4, 1, 2, 1, 1]
      span: [25, 4, 12]
    }
    location {
      path: [4, 1, 4, 1, 2, 1, 2]
      span: [25, 15, 16]
    }
    location {
      path: [4, 1, 4, 1, 2, 2]
      span: [26, 4, 15]
    }
    location {
      path: [4, 1, 4, 1, 2, 2, 1]
      span: [26, 4, 10]
    }
    location {
      path: [4, 1, 4, 1, 2, 2, 2]
      span: [26, 13, 14]
    }
    location {
      path: [4, 1, 2, 0]
      span: [29, 2, 21]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [29, 2, 27, 4]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [29, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [29, 9, 16]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [29, 19, 20]
    }
    location {
      path: [4, 1, 2, 1]
      span: [30, 2, 19]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [30, 2, 29, 21]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [30, 2, 8]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [30, 9, 14]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [30, 17, 18]
    }
    location {
      path: [4, 1, 2, 2]
      span: [31, 2, 22]
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [31, 2, 30, 19]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [31, 9, 17]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [31, 20, 21]
    }
    location {
      path: [4, 1, 2, 3]
      span: [32, 2, 18]
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [32, 2, 31, 22]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [32, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [32, 9, 13]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [32, 16, 17]
    }
    location {
      path: [4, 1, 2, 4]
      span: [33, 2, 35]
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [33, 2, 32, 18]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [33, 2, 16]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [33, 17, 30]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [33, 33, 34]
    }
    location {
      path: [4, 1, 2, 5]
      span: [34, 2, 20]
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [34, 2, 33, 35]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [34, 2, 8]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [34, 9, 15]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [34, 18, 19]
    }
    location {
      path: [4, 1, 2, 6]
      span: [35, 2, 19]
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [35, 2, 34, 20]
    }
    location {
      path: [4, 1, 2, 6, 5]
      span: [35, 2, 7]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [35, 8, 14]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [35, 17, 18]
    }
    location {
      path: [4, 1, 2, 7]
      span: [38, 2, 19]
      leading_comments: " Keeps url to the photo of the user.\n"
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [38, 2, 35, 19]
    }
    location {
      path: [4, 1, 2, 7, 5]
      span: [38, 2, 8]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [38, 9, 14]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [38, 17, 18]
    }
    location {
      path: [4, 1, 2, 8]
      span: [39, 2, 20]
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [39, 2, 38, 19]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [39, 2, 8]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [39, 9, 15]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [39, 18, 19]
    }
    location {
      path: [4, 1, 2, 9]
      span: [40, 2, 36]
    }
    location {
      path: [4, 1, 2, 9, 4]
      span: [40, 2, 39, 20]
    }
    location {
      path: [4, 1, 2, 9, 6]
      span: [40, 2, 16]
    }
    location {
      path: [4, 1, 2, 9, 1]
      span: [40, 17, 30]
    }
    location {
      path: [4, 1, 2, 9, 3]
      span: [40, 33, 35]
    }
    location {
      path: [4, 1, 2, 10]
      span: [42, 2, 46]
    }
    location {
      path: [4, 1, 2, 10, 4]
      span: [42, 2, 10]
    }
    location {
      path: [4, 1, 2, 10, 6]
      span: [42, 11, 24]
    }
    location {
      path: [4, 1, 2, 10, 1]
      span: [42, 25, 40]
    }
    location {
      path: [4, 1, 2, 10, 3]
      span: [42, 43, 45]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "protos/suggestion.proto"
  package: "neva.backend"
  message_type {
    name: "Suggestion"
    field {
      name: "suggestion_category"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.Suggestion.SuggestionCategory"
      json_name: "suggestionCategory"
    }
    field {
      name: "suggestee_id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "suggesteeId"
    }
    field {
      name: "name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "tags"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Tag"
      json_name: "tags"
    }
    enum_type {
      name: "SuggestionCategory"
      value {
        name: "INVALID_SUGGESTION_CATEGORY"
        number: 0
      }
      value {
        name: "MEAL"
        number: 1
      }
    }
  }
  message_type {
    name: "SuggestionList"
    field {
      name: "suggestion_list"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Suggestion"
      json_name: "suggestionList"
    }
  }
  message_type {
    name: "Tag"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "id"
    }
    field {
      name: "name"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
  }
  source_code_info {
    location {
      span: [0, 0, 32, 2]
    }
    location {
      path: [12]
      span: [0, 0, 18]
    }
    location {
      path: [2]
      span: [2, 8, 20]
    }
    location {
      path: [4, 0]
      span: [4, 0, 21, 1]
    }
    location {
      path: [4, 0, 1]
      span: [4, 8, 18]
    }
    location {
      path: [4, 0, 4, 0]
      span: [5, 2, 8, 3]
    }
    location {
      path: [4, 0, 4, 0, 1]
      span: [5, 7, 25]
    }
    location {
      path: [4, 0, 4, 0, 2, 0]
      span: [6, 4, 36]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 1]
      span: [6, 4, 31]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 2]
      span: [6, 34, 35]
    }
    location {
      path: [4, 0, 4, 0, 2, 1]
      span: [7, 4, 13]
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 1]
      span: [7, 4, 8]
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 2]
      span: [7, 11, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 45]
      leading_comments: " Shows the category to which suggestion belongs.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 8, 4]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [11, 2, 20]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 21, 40]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 43, 44]
    }
    location {
      path: [4, 0, 2, 1]
      span: [14, 2, 26]
      leading_comments: " id of the suggestee in the database.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [14, 2, 11, 45]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [14, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [14, 9, 21]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [14, 24, 25]
    }
    location {
      path: [4, 0, 2, 2]
      span: [17, 2, 18]
      leading_comments: " Name of the suggestion item, like \"lahmacun\".\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [17, 2, 14, 26]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [17, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [17, 9, 13]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [17, 16, 17]
    }
    location {
      path: [4, 0, 2, 3]
      span: [20, 2, 24]
      leading_comments: " Tags associated with that suggestion.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [20, 2, 10]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [20, 11, 14]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [20, 15, 19]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [20, 22, 23]
    }
    location {
      path: [4, 1]
      span: [23, 0, 25, 1]
    }
    location {
      path: [4, 1, 1]
      span: [23, 8, 22]
    }
    location {
      path: [4, 1, 2, 0]
      span: [24, 2, 42]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [24, 2, 10]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [24, 11, 21]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [24, 22, 37]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [24, 40, 41]
    }
    location {
      path: [4, 2]
      span: [27, 0, 32, 1]
    }
    location {
      path: [4, 2, 1]
      span: [27, 8, 11]
    }
    location {
      path: [4, 2, 2, 0]
      span: [29, 2, 16]
      leading_comments: " id of the tag in `tag` table.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [29, 2, 27, 13]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [29, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [29, 9, 11]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [29, 14, 15]
    }
    location {
      path: [4, 2, 2, 1]
      span: [31, 2, 18]
      leading_comments: " name of the tag.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [31, 2, 29, 16]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [31, 9, 13]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [31, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "protos/user_history.proto"
  package: "neva.backend"
  dependency: "protos/util.proto"
  message_type {
    name: "Choice"
    field {
      name: "suggestee_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "suggesteeId"
    }
    field {
      name: "timestamp"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.util.Timestamp"
      json_name: "timestamp"
    }
    field {
      name: "latitude"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "latitude"
    }
    field {
      name: "longitude"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "longitude"
    }
    field {
      name: "choice_id"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "choiceId"
    }
  }
  message_type {
    name: "UserHistory"
    field {
      name: "user_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "userId"
    }
    field {
      name: "history"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Choice"
      json_name: "history"
    }
  }
  message_type {
    name: "UserFeedback"
    field {
      name: "choice"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Choice"
      json_name: "choice"
    }
    field {
      name: "feedback"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.UserFeedback.Feedback"
      json_name: "feedback"
    }
    field {
      name: "user_id"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "userId"
    }
    enum_type {
      name: "Feedback"
      value {
        name: "UNKNOWN"
        number: 0
      }
      value {
        name: "DISLIKE"
        number: 1
      }
      value {
        name: "LIKE"
        number: 2
      }
    }
  }
  source_code_info {
    location {
      span: [0, 0, 46, 1]
    }
    location {
      path: [12]
      span: [0, 0, 18]
    }
    location {
      path: [3, 0]
      span: [2, 7, 26]
    }
    location {
      path: [2]
      span: [4, 8, 20]
    }
    location {
      path: [4, 0]
      span: [6, 0, 19, 1]
    }
    location {
      path: [4, 0, 1]
      span: [6, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [8, 2, 26]
      leading_comments: " Which item was selected.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [8, 2, 6, 16]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [8, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [8, 9, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [8, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [11, 2, 31]
      leading_comments: " When was the selection performed.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [11, 2, 8, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [11, 2, 16]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [11, 17, 26]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [11, 29, 30]
    }
    location {
      path: [4, 0, 2, 2]
      span: [14, 2, 22]
      leading_comments: " Where was the selection performed.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [14, 2, 11, 31]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [14, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [14, 9, 17]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [14, 20, 21]
    }
    location {
      path: [4, 0, 2, 3]
      span: [15, 2, 23]
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [15, 2, 14, 22]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [15, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [15, 9, 18]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [15, 21, 22]
    }
    location {
      path: [4, 0, 2, 4]
      span: [18, 2, 23]
      leading_comments: " What is the id of the selection in user_choice_history table.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [18, 2, 15, 23]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [18, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [18, 9, 18]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [18, 21, 22]
    }
    location {
      path: [4, 1]
      span: [21, 0, 27, 1]
    }
    location {
      path: [4, 1, 1]
      span: [21, 8, 19]
    }
    location {
      path: [4, 1, 2, 0]
      span: [23, 2, 21]
      leading_comments: " Id of the user to which history entries belongs to.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [23, 2, 21, 21]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [23, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [23, 9, 16]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [23, 19, 20]
    }
    location {
      path: [4, 1, 2, 1]
      span: [26, 2, 30]
      leading_comments: " Entries related to user.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [26, 2, 10]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [26, 11, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [26, 18, 25]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [26, 28, 29]
    }
    location {
      path: [4, 2]
      span: [29, 0, 46, 1]
    }
    location {
      path: [4, 2, 1]
      span: [29, 8, 20]
    }
    location {
      path: [4, 2, 4, 0]
      span: [30, 2, 34, 3]
    }
    location {
      path: [4, 2, 4, 0, 1]
      span: [30, 7, 15]
    }
    location {
      path: [4, 2, 4, 0, 2, 0]
      span: [31, 4, 16]
    }
    location {
      path: [4, 2, 4, 0, 2, 0, 1]
      span: [31, 4, 11]
    }
    location {
      path: [4, 2, 4, 0, 2, 0, 2]
      span: [31, 14, 15]
    }
    location {
      path: [4, 2, 4, 0, 2, 1]
      span: [32, 4, 16]
    }
    location {
      path: [4, 2, 4, 0, 2, 1, 1]
      span: [32, 4, 11]
    }
    location {
      path: [4, 2, 4, 0, 2, 1, 2]
      span: [32, 14, 15]
    }
    location {
      path: [4, 2, 4, 0, 2, 2]
      span: [33, 4, 13]
    }
    location {
      path: [4, 2, 4, 0, 2, 2, 1]
      span: [33, 4, 8]
    }
    location {
      path: [4, 2, 4, 0, 2, 2, 2]
      span: [33, 11, 12]
    }
    location {
      path: [4, 2, 2, 0]
      span: [38, 2, 20]
      leading_comments: " Information about the recommendation the feedback was given.\n choice.choice_id conisides with the last_choice_id in\n user_recommendation_feedback table\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [38, 2, 34, 3]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [38, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [38, 9, 15]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [38, 18, 19]
    }
    location {
      path: [4, 2, 2, 1]
      span: [41, 2, 24]
      leading_comments: " Feedback given to recommendation.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [41, 2, 38, 20]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [41, 2, 10]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [41, 11, 19]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [41, 22, 23]
    }
    location {
      path: [4, 2, 2, 2]
      span: [45, 2, 21]
      leading_comments: " Id of the user to which feedback belongs to. On incoming requests is\n deduced from session token. So can be empty.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [45, 2, 41, 24]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [45, 2, 8]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [45, 9, 16]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [45, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "protos/backend.proto"
  package: "neva.backend"
  dependency: "protos/user.proto"
  dependency: "protos/suggestion.proto"
  dependency: "protos/user_history.proto"
  message_type {
    name: "GenericReply"
  }
  message_type {
    name: "RegisterRequest"
    field {
      name: "user"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.User"
      json_name: "user"
    }
  }
  message_type {
    name: "LoginRequest"
    field {
      name: "email"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "email"
    }
    field {
      name: "password"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "password"
    }
    field {
      name: "authentication_type"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.LoginRequest.AuthenticationType"
      json_name: "authenticationType"
    }
    enum_type {
      name: "AuthenticationType"
      value {
        name: "INVALID"
        number: 0
      }
      value {
        name: "DEFAULT"
        number: 1
      }
      value {
        name: "FACEBOOK"
        number: 2
      }
    }
  }
  message_type {
    name: "LoginReply"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
  }
  message_type {
    name: "UpdateUserRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "user"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.User"
      json_name: "user"
    }
  }
  message_type {
    name: "GetUserRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
  }
  message_type {
    name: "GetUserReply"
    field {
      name: "user"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.User"
      json_name: "user"
    }
  }
  message_type {
    name: "SuggestionItemPropositionRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "suggestion"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Suggestion"
      json_name: "suggestion"
    }
  }
  message_type {
    name: "GetMultipleSuggestionsRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "suggestion_category"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.Suggestion.SuggestionCategory"
      json_name: "suggestionCategory"
    }
  }
  message_type {
    name: "GetMultipleSuggestionsReply"
    field {
      name: "suggestion"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.SuggestionList"
      json_name: "suggestion"
    }
  }
  message_type {
    name: "TagPropositionRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "tag"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "tag"
    }
  }
  message_type {
    name: "TagValuePropositionRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "tag_id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "tagId"
    }
    field {
      name: "suggestee_id"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "suggesteeId"
    }
    field {
      name: "value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "value"
    }
  }
  message_type {
    name: "GetSuggestionItemListRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "suggestion_category"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.Suggestion.SuggestionCategory"
      json_name: "suggestionCategory"
    }
    field {
      name: "start_index"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "startIndex"
    }
  }
  message_type {
    name: "GetSuggestionItemListReply"
    field {
      name: "items"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.SuggestionList"
      json_name: "items"
    }
    field {
      name: "last_updated"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "lastUpdated"
    }
  }
  message_type {
    name: "InformUserChoiceRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "choice"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Choice"
      json_name: "choice"
    }
  }
  message_type {
    name: "InformUserChoiceReply"
    field {
      name: "choice_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "choiceId"
    }
  }
  message_type {
    name: "FetchUserHistoryRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "start_index"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "startIndex"
    }
  }
  message_type {
    name: "FetchUserHistoryReply"
    field {
      name: "user_history"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.UserHistory"
      json_name: "userHistory"
    }
  }
  message_type {
    name: "CheckTokenRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
  }
  message_type {
    name: "RecordFeedbackRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "user_feedback"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.UserFeedback"
      json_name: "userFeedback"
    }
  }
  message_type {
    name: "GetTagsRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "start_index"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "startIndex"
    }
  }
  message_type {
    name: "GetTagsReply"
    field {
      name: "tag_list"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Tag"
      json_name: "tagList"
    }
  }
  message_type {
    name: "GetColdStartCompletionStatusRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
  }
  message_type {
    name: "GetColdStartCompletionStatusReply"
    field {
      name: "completion_status"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "completionStatus"
    }
  }
  message_type {
    name: "GetColdStartItemListRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "coldstart_item_category"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.Suggestion.SuggestionCategory"
      json_name: "coldstartItemCategory"
    }
  }
  message_type {
    name: "GetColdStartItemListReply"
    field {
      name: "coldstart_item_list"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.SuggestionList"
      json_name: "coldstartItemList"
    }
  }
  message_type {
    name: "RecordColdStartChoiceRequest"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "token"
    }
    field {
      name: "coldstart_item"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".neva.backend.Suggestion"
      json_name: "coldstartItem"
    }
    field {
      name: "feedback"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".neva.backend.UserFeedback.Feedback"
      json_name: "feedback"
    }
  }
  service {
    name: "Backend"
    method {
      name: "Register"
      input_type: ".neva.backend.RegisterRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "Login"
      input_type: ".neva.backend.LoginRequest"
      output_type: ".neva.backend.LoginReply"
      options {
      }
    }
    method {
      name: "UpdateUser"
      input_type: ".neva.backend.UpdateUserRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "GetUser"
      input_type: ".neva.backend.GetUserRequest"
      output_type: ".neva.backend.GetUserReply"
      options {
      }
    }
    method {
      name: "SuggestionItemProposition"
      input_type: ".neva.backend.SuggestionItemPropositionRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "GetMultipleSuggestions"
      input_type: ".neva.backend.GetMultipleSuggestionsRequest"
      output_type: ".neva.backend.GetMultipleSuggestionsReply"
      options {
      }
    }
    method {
      name: "TagProposition"
      input_type: ".neva.backend.TagPropositionRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "TagValueProposition"
      input_type: ".neva.backend.TagValuePropositionRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "GetSuggestionItemList"
      input_type: ".neva.backend.GetSuggestionItemListRequest"
      output_type: ".neva.backend.GetSuggestionItemListReply"
      options {
      }
    }
    method {
      name: "InformUserChoice"
      input_type: ".neva.backend.InformUserChoiceRequest"
      output_type: ".neva.backend.InformUserChoiceReply"
      options {
      }
    }
    method {
      name: "FetchUserHistory"
      input_type: ".neva.backend.FetchUserHistoryRequest"
      output_type: ".neva.backend.FetchUserHistoryReply"
      options {
      }
    }
    method {
      name: "CheckToken"
      input_type: ".neva.backend.CheckTokenRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "RecordFeedback"
      input_type: ".neva.backend.RecordFeedbackRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
    method {
      name: "GetTags"
      input_type: ".neva.backend.GetTagsRequest"
      output_type: ".neva.backend.GetTagsReply"
      options {
      }
    }
    method {
      name: "GetColdStartCompletionStatus"
      input_type: ".neva.backend.GetColdStartCompletionStatusRequest"
      output_type: ".neva.backend.GetColdStartCompletionStatusReply"
      options {
      }
    }
    method {
      name: "GetColdStartItemList"
      input_type: ".neva.backend.GetColdStartItemListRequest"
      output_type: ".neva.backend.GetColdStartItemListReply"
      options {
      }
    }
    method {
      name: "RecordColdStartChoice"
      input_type: ".neva.backend.RecordColdStartChoiceRequest"
      output_type: ".neva.backend.GenericReply"
      options {
      }
    }
  }
  source_code_info {
    location {
      span: [0, 0, 258, 1]
    }
    location {
      path: [12]
      span: [0, 0, 18]
    }
    location {
      path: [3, 0]
      span: [2, 7, 26]
    }
    location {
      path: [3, 1]
      span: [3, 7, 32]
    }
    location {
      path: [3, 2]
      span: [4, 7, 34]
    }
    location {
      path: [2]
      span: [6, 8, 20]
    }
    location {
      path: [6, 0]
      span: [8, 0, 71, 1]
    }
    location {
      path: [6, 0, 1]
      span: [8, 8, 15]
    }
    location {
      path: [6, 0, 2, 0]
      span: [9, 2, 10, 3]
    }
    location {
      path: [6, 0, 2, 0, 1]
      span: [9, 6, 14]
    }
    location {
      path: [6, 0, 2, 0, 2]
      span: [9, 15, 30]
    }
    location {
      path: [6, 0, 2, 0, 3]
      span: [9, 41, 53]
    }
    location {
      path: [6, 0, 2, 1]
      span: [12, 2, 13, 3]
    }
    location {
      path: [6, 0, 2, 1, 1]
      span: [12, 6, 11]
    }
    location {
      path: [6, 0, 2, 1, 2]
      span: [12, 12, 24]
    }
    location {
      path: [6, 0, 2, 1, 3]
      span: [12, 35, 45]
    }
    location {
      path: [6, 0, 2, 2]
      span: [15, 2, 16, 3]
    }
    location {
      path: [6, 0, 2, 2, 1]
      span: [15, 6, 16]
    }
    location {
      path: [6, 0, 2, 2, 2]
      span: [15, 17, 34]
    }
    location {
      path: [6, 0, 2, 2, 3]
      span: [15, 45, 57]
    }
    location {
      path: [6, 0, 2, 3]
      span: [18, 2, 19, 3]
    }
    location {
      path: [6, 0, 2, 3, 1]
      span: [18, 6, 13]
    }
    location {
      path: [6, 0, 2, 3, 2]
      span: [18, 14, 28]
    }
    location {
      path: [6, 0, 2, 3, 3]
      span: [18, 39, 51]
    }
    location {
      path: [6, 0, 2, 4]
      span: [21, 2, 23, 3]
    }
    location {
      path: [6, 0, 2, 4, 1]
      span: [21, 6, 31]
    }
    location {
      path: [6, 0, 2, 4, 2]
      span: [21, 32, 64]
    }
    location {
      path: [6, 0, 2, 4, 3]
      span: [22, 15, 27]
    }
    location {
      path: [6, 0, 2, 5]
      span: [25, 2, 27, 3]
    }
    location {
      path: [6, 0, 2, 5, 1]
      span: [25, 6, 28]
    }
    location {
      path: [6, 0, 2, 5, 2]
      span: [25, 29, 58]
    }
    location {
      path: [6, 0, 2, 5, 3]
      span: [26, 15, 42]
    }
    location {
      path: [6, 0, 2, 6]
      span: [29, 2, 30, 3]
    }
    location {
      path: [6, 0, 2, 6, 1]
      span: [29, 6, 20]
    }
    location {
      path: [6, 0, 2, 6, 2]
      span: [29, 21, 42]
    }
    location {
      path: [6, 0, 2, 6, 3]
      span: [29, 53, 65]
    }
    location {
      path: [6, 0, 2, 7]
      span: [32, 2, 33, 3]
    }
    location {
      path: [6, 0, 2, 7, 1]
      span: [32, 6, 25]
    }
    location {
      path: [6, 0, 2, 7, 2]
      span: [32, 26, 52]
    }
    location {
      path: [6, 0, 2, 7, 3]
      span: [32, 63, 75]
    }
    location {
      path: [6, 0, 2, 8]
      span: [35, 2, 37, 3]
    }
    location {
      path: [6, 0, 2, 8, 1]
      span: [35, 6, 27]
    }
    location {
      path: [6, 0, 2, 8, 2]
      span: [35, 28, 56]
    }
    location {
      path: [6, 0, 2, 8, 3]
      span: [36, 15, 41]
    }
    location {
      path: [6, 0, 2, 9]
      span: [39, 2, 41, 3]
    }
    location {
      path: [6, 0, 2, 9, 1]
      span: [39, 6, 22]
    }
    location {
      path: [6, 0, 2, 9, 2]
      span: [39, 23, 46]
    }
    location {
      path: [6, 0, 2, 9, 3]
      span: [40, 15, 36]
    }
    location {
      path: [6, 0, 2, 10]
      span: [43, 2, 45, 3]
    }
    location {
      path: [6, 0, 2, 10, 1]
      span: [43, 6, 22]
    }
    location {
      path: [6, 0, 2, 10, 2]
      span: [43, 23, 46]
    }
    location {
      path: [6, 0, 2, 10, 3]
      span: [44, 15, 36]
    }
    location {
      path: [6, 0, 2, 11]
      span: [47, 2, 48, 3]
    }
    location {
      path: [6, 0, 2, 11, 1]
      span: [47, 6, 16]
    }
    location {
      path: [6, 0, 2, 11, 2]
      span: [47, 17, 34]
    }
    location {
      path: [6, 0, 2, 11, 3]
      span: [47, 45, 57]
    }
    location {
      path: [6, 0, 2, 12]
      span: [50, 2, 51, 3]
    }
    location {
      path: [6, 0, 2, 12, 1]
      span: [50, 6, 20]
    }
    location {
      path: [6, 0, 2, 12, 2]
      span: [50, 21, 42]
    }
    location {
      path: [6, 0, 2, 12, 3]
      span: [50, 53, 65]
    }
    location {
      path: [6, 0, 2, 13]
      span: [54, 2, 55, 3]
      leading_comments: " Returns all tags in the database.\n"
    }
    location {
      path: [6, 0, 2, 13, 1]
      span: [54, 6, 13]
    }
    location {
      path: [6, 0, 2, 13, 2]
      span: [54, 14, 28]
    }
    location {
      path: [6, 0, 2, 13, 3]
      span: [54, 39, 51]
    }
    location {
      path: [6, 0, 2, 14]
      span: [58, 2, 60, 3]
      leading_comments: " Returns cold start completion status for the user.\n"
    }
    location {
      path: [6, 0, 2, 14, 1]
      span: [58, 6, 34]
    }
    location {
      path: [6, 0, 2, 14, 2]
      span: [58, 35, 70]
    }
    location {
      path: [6, 0, 2, 14, 3]
      span: [59, 15, 48]
    }
    location {
      path: [6, 0, 2, 15]
      span: [63, 2, 65, 3]
      leading_comments: " Returns SuggestionList for cold start\n"
    }
    location {
      path: [6, 0, 2, 15, 1]
      span: [63, 6, 26]
    }
    location {
      path: [6, 0, 2, 15, 2]
      span: [63, 27, 54]
    }
    location {
      path: [6, 0, 2, 15, 3]
      span: [64, 15, 40]
    }
    location {
      path: [6, 0, 2, 16]
      span: [68, 2, 70, 3]
      leading_comments: " Inform user choice for cold start\n"
    }
    location {
      path: [6, 0, 2, 16, 1]
      span: [68, 6, 27]
    }
    location {
      path: [6, 0, 2, 16, 2]
      span: [68, 28, 56]
    }
    location {
      path: [6, 0, 2, 16, 3]
      span: [69, 15, 27]
    }
    location {
      path: [4, 0]
      span: [73, 0, 74, 1]
    }
    location {
      path: [4, 0, 1]
      span: [73, 8, 20]
    }
    location {
      path: [4, 1]
      span: [76, 0, 78, 1]
    }
    location {
      path: [4, 1, 1]
      span: [76, 8, 23]
    }
    location {
      path: [4, 1, 2, 0]
      span: [77, 2, 16]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [77, 2, 76, 25]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [77, 2, 6]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [77, 7, 11]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [77, 14, 15]
    }
    location {
      path: [4, 2]
      span: [80, 0, 90, 1]
    }
    location {
      path: [4, 2, 1]
      span: [80, 8, 20]
    }
    location {
      path: [4, 2, 4, 0]
      span: [81, 2, 85, 3]
    }
    location {
      path: [4, 2, 4, 0, 1]
      span: [81, 7, 25]
    }
    location {
      path: [4, 2, 4, 0, 2, 0]
      span: [82, 4, 16]
    }
    location {
      path: [4, 2, 4, 0, 2, 0, 1]
      span: [82, 4, 11]
    }
    location {
      path: [4, 2, 4, 0, 2, 0, 2]
      span: [82, 14, 15]
    }
    location {
      path: [4, 2, 4, 0, 2, 1]
      span: [83, 4, 16]
    }
    location {
      path: [4, 2, 4, 0, 2, 1, 1]
      span: [83, 4, 11]
    }
    location {
      path: [4, 2, 4, 0, 2, 1, 2]
      span: [83, 14, 15]
    }
    location {
      path: [4, 2, 4, 0, 2, 2]
      span: [84, 4, 17]
    }
    location {
      path: [4, 2, 4, 0, 2, 2, 1]
      span: [84, 4, 12]
    }
    location {
      path: [4, 2, 4, 0, 2, 2, 2]
      span: [84, 15, 16]
    }
    location {
      path: [4, 2, 2, 0]
      span: [87, 2, 19]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [87, 2, 85, 4]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [87, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [87, 9, 14]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [87, 17, 18]
    }
    location {
      path: [4, 2, 2, 1]
      span: [88, 2, 22]
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [88, 2, 87, 19]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [88, 2, 8]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [88, 9, 17]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [88, 20, 21]
    }
    location {
      path: [4, 2, 2, 2]
      span: [89, 2, 45]
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [89, 2, 88, 22]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [89, 2, 20]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [89, 21, 40]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [89, 43, 44]
    }
    location {
      path: [4, 3]
      span: [92, 0, 95, 1]
    }
    location {
      path: [4, 3, 1]
      span: [92, 8, 18]
    }
    location {
      path: [4, 3, 2, 0]
      span: [94, 2, 18]
      leading_comments: " Authentication token to be used in upcoming requests.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [94, 2, 92, 20]
    }
    location {
      path: [4, 3, 2, 0, 5]
      span: [94, 2, 7]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [94, 8, 13]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [94, 16, 17]
    }
    location {
      path: [4, 4]
      span: [97, 0, 103, 1]
    }
    location {
      path: [4, 4, 1]
      span: [97, 8, 25]
    }
    location {
      path: [4, 4, 2, 0]
      span: [99, 2, 18]
      leading_comments: " Session key for the user sending request.\n"
    }
    location {
      path: [4, 4, 2, 0, 4]
      span: [99, 2, 97, 27]
    }
    location {
      path: [4, 4, 2, 0, 5]
      span: [99, 2, 7]
    }
    location {
      path: [4, 4, 2, 0, 1]
      span: [99, 8, 13]
    }
    location {
      path: [4, 4, 2, 0, 3]
      span: [99, 16, 17]
    }
    location {
      path: [4, 4, 2, 1]
      span: [102, 2, 16]
      leading_comments: " Updated user data.\n"
    }
    location {
      path: [4, 4, 2, 1, 4]
      span: [102, 2, 99, 18]
    }
    location {
      path: [4, 4, 2, 1, 6]
      span: [102, 2, 6]
    }
    location {
      path: [4, 4, 2, 1, 1]
      span: [102, 7, 11]
    }
    location {
      path: [4, 4, 2, 1, 3]
      span: [102, 14, 15]
    }
    location {
      path: [4, 5]
      span: [105, 0, 108, 1]
    }
    location {
      path: [4, 5, 1]
      span: [105, 8, 22]
    }
    location {
      path: [4, 5, 2, 0]
      span: [107, 2, 18]
      leading_comments: " Session key for the user sending request.\n"
    }
    location {
      path: [4, 5, 2, 0, 4]
      span: [107, 2, 105, 24]
    }
    location {
      path: [4, 5, 2, 0, 5]
      span: [107, 2, 7]
    }
    location {
      path: [4, 5, 2, 0, 1]
      span: [107, 8, 13]
    }
    location {
      path: [4, 5, 2, 0, 3]
      span: [107, 16, 17]
    }
    location {
      path: [4, 6]
      span: [110, 0, 113, 1]
    }
    location {
      path: [4, 6, 1]
      span: [110, 8, 20]
    }
    location {
      path: [4, 6, 2, 0]
      span: [112, 2, 16]
      leading_comments: " User data of the requested user.\n"
    }
    location {
      path: [4, 6, 2, 0, 4]
      span: [112, 2, 110, 22]
    }
    location {
      path: [4, 6, 2, 0, 6]
      span: [112, 2, 6]
    }
    location {
      path: [4, 6, 2, 0, 1]
      span: [112, 7, 11]
    }
    location {
      path: [4, 6, 2, 0, 3]
      span: [112, 14, 15]
    }
    location {
      path: [4, 7]
      span: [115, 0, 121, 1]
    }
    location {
      path: [4, 7, 1]
      span: [115, 8, 40]
    }
    location {
      path: [4, 7, 2, 0]
      span: [117, 2, 18]
      leading_comments: " Session key for the user proposing the item.\n"
    }
    location {
      path: [4, 7, 2, 0, 4]
      span: [117, 2, 115, 42]
    }
    location {
      path: [4, 7, 2, 0, 5]
      span: [117, 2, 7]
    }
    location {
      path: [4, 7, 2, 0, 1]
      span: [117, 8, 13]
    }
    location {
      path: [4, 7, 2, 0, 3]
      span: [117, 16, 17]
    }
    location {
      path: [4, 7, 2, 1]
      span: [120, 2, 28]
      leading_comments: " Holds information on propositions category and name.\n"
    }
    location {
      path: [4, 7, 2, 1, 4]
      span: [120, 2, 117, 18]
    }
    location {
      path: [4, 7, 2, 1, 6]
      span: [120, 2, 12]
    }
    location {
      path: [4, 7, 2, 1, 1]
      span: [120, 13, 23]
    }
    location {
      path: [4, 7, 2, 1, 3]
      span: [120, 26, 27]
    }
    location {
      path: [4, 8]
      span: [123, 0, 129, 1]
    }
    location {
      path: [4, 8, 1]
      span: [123, 8, 37]
    }
    location {
      path: [4, 8, 2, 0]
      span: [125, 2, 18]
      leading_comments: " Session key for the user requesting a suggestion.\n"
    }
    location {
      path: [4, 8, 2, 0, 4]
      span: [125, 2, 123, 39]
    }
    location {
      path: [4, 8, 2, 0, 5]
      span: [125, 2, 7]
    }
    location {
      path: [4, 8, 2, 0, 1]
      span: [125, 8, 13]
    }
    location {
      path: [4, 8, 2, 0, 3]
      span: [125, 16, 17]
    }
    location {
      path: [4, 8, 2, 1]
      span: [128, 2, 56]
      leading_comments: " Category for which the user requests a suggestion.\n"
    }
    location {
      path: [4, 8, 2, 1, 4]
      span: [128, 2, 125, 18]
    }
    location {
      path: [4, 8, 2, 1, 6]
      span: [128, 2, 31]
    }
    location {
      path: [4, 8, 2, 1, 1]
      span: [128, 32, 51]
    }
    location {
      path: [4, 8, 2, 1, 3]
      span: [128, 54, 55]
    }
    location {
      path: [4, 9]
      span: [131, 0, 134, 1]
    }
    location {
      path: [4, 9, 1]
      span: [131, 8, 35]
    }
    location {
      path: [4, 9, 2, 0]
      span: [133, 2, 32]
      leading_comments: " List of suggested items.\n"
    }
    location {
      path: [4, 9, 2, 0, 4]
      span: [133, 2, 131, 37]
    }
    location {
      path: [4, 9, 2, 0, 6]
      span: [133, 2, 16]
    }
    location {
      path: [4, 9, 2, 0, 1]
      span: [133, 17, 27]
    }
    location {
      path: [4, 9, 2, 0, 3]
      span: [133, 30, 31]
    }
    location {
      path: [4, 10]
      span: [136, 0, 142, 1]
    }
    location {
      path: [4, 10, 1]
      span: [136, 8, 29]
    }
    location {
      path: [4, 10, 2, 0]
      span: [138, 2, 18]
      leading_comments: " Session key for the user proposing the tag.\n"
    }
    location {
      path: [4, 10, 2, 0, 4]
      span: [138, 2, 136, 31]
    }
    location {
      path: [4, 10, 2, 0, 5]
      span: [138, 2, 7]
    }
    location {
      path: [4, 10, 2, 0, 1]
      span: [138, 8, 13]
    }
    location {
      path: [4, 10, 2, 0, 3]
      span: [138, 16, 17]
    }
    location {
      path: [4, 10, 2, 1]
      span: [141, 2, 17]
      leading_comments: " Holds name for proposed tag.\n"
    }
    location {
      path: [4, 10, 2, 1, 4]
      span: [141, 2, 138, 18]
    }
    location {
      path: [4, 10, 2, 1, 5]
      span: [141, 2, 8]
    }
    location {
      path: [4, 10, 2, 1, 1]
      span: [141, 9, 12]
    }
    location {
      path: [4, 10, 2, 1, 3]
      span: [141, 15, 16]
    }
    location {
      path: [4, 11]
      span: [144, 0, 156, 1]
    }
    location {
      path: [4, 11, 1]
      span: [144, 8, 34]
    }
    location {
      path: [4, 11, 2, 0]
      span: [146, 2, 18]
      leading_comments: " Session key for the user proposing the tag.\n"
    }
    location {
      path: [4, 11, 2, 0, 4]
      span: [146, 2, 144, 36]
    }
    location {
      path: [4, 11, 2, 0, 5]
      span: [146, 2, 7]
    }
    location {
      path: [4, 11, 2, 0, 1]
      span: [146, 8, 13]
    }
    location {
      path: [4, 11, 2, 0, 3]
      span: [146, 16, 17]
    }
    location {
      path: [4, 11, 2, 1]
      span: [149, 2, 20]
      leading_comments: " Holds id of the tag.\n"
    }
    location {
      path: [4, 11, 2, 1, 4]
      span: [149, 2, 146, 18]
    }
    location {
      path: [4, 11, 2, 1, 5]
      span: [149, 2, 8]
    }
    location {
      path: [4, 11, 2, 1, 1]
      span: [149, 9, 15]
    }
    location {
      path: [4, 11, 2, 1, 3]
      span: [149, 18, 19]
    }
    location {
      path: [4, 11, 2, 2]
      span: [152, 2, 26]
      leading_comments: " Holds id of the suggestion item.\n"
    }
    location {
      path: [4, 11, 2, 2, 4]
      span: [152, 2, 149, 20]
    }
    location {
      path: [4, 11, 2, 2, 5]
      span: [152, 2, 8]
    }
    location {
      path: [4, 11, 2, 2, 1]
      span: [152, 9, 21]
    }
    location {
      path: [4, 11, 2, 2, 3]
      span: [152, 24, 25]
    }
    location {
      path: [4, 11, 2, 3]
      span: [155, 2, 19]
      leading_comments: " Holds value for the tag if appropriate.\n"
    }
    location {
      path: [4, 11, 2, 3, 4]
      span: [155, 2, 152, 26]
    }
    location {
      path: [4, 11, 2, 3, 5]
      span: [155, 2, 8]
    }
    location {
      path: [4, 11, 2, 3, 1]
      span: [155, 9, 14]
    }
    location {
      path: [4, 11, 2, 3, 3]
      span: [155, 17, 18]
    }
    location {
      path: [4, 12]
      span: [158, 0, 168, 1]
    }
    location {
      path: [4, 12, 1]
      span: [158, 8, 36]
    }
    location {
      path: [4, 12, 2, 0]
      span: [160, 2, 18]
      leading_comments: " Session key for the user requesting item list.\n"
    }
    location {
      path: [4, 12, 2, 0, 4]
      span: [160, 2, 158, 38]
    }
    location {
      path: [4, 12, 2, 0, 5]
      span: [160, 2, 7]
    }
    location {
      path: [4, 12, 2, 0, 1]
      span: [160, 8, 13]
    }
    location {
      path: [4, 12, 2, 0, 3]
      span: [160, 16, 17]
    }
    location {
      path: [4, 12, 2, 1]
      span: [163, 2, 56]
      leading_comments: " Category for which the user requesting items.\n"
    }
    location {
      path: [4, 12, 2, 1, 4]
      span: [163, 2, 160, 18]
    }
    location {
      path: [4, 12, 2, 1, 6]
      span: [163, 2, 31]
    }
    location {
      path: [4, 12, 2, 1, 1]
      span: [163, 32, 51]
    }
    location {
      path: [4, 12, 2, 1, 3]
      span: [163, 54, 55]
    }
    location {
      path: [4, 12, 2, 2]
      span: [167, 2, 25]
      leading_comments: " Fetch elements updated after that index. Giving zero as start_index would\n result in fetching all items.\n"
    }
    location {
      path: [4, 12, 2, 2, 4]
      span: [167, 2, 163, 56]
    }
    location {
      path: [4, 12, 2, 2, 5]
      span: [167, 2, 8]
    }
    location {
      path: [4, 12, 2, 2, 1]
      span: [167, 9, 20]
    }
    location {
      path: [4, 12, 2, 2, 3]
      span: [167, 23, 24]
    }
    location {
      path: [4, 13]
      span: [170, 0, 176, 1]
    }
    location {
      path: [4, 13, 1]
      span: [170, 8, 34]
    }
    location {
      path: [4, 13, 2, 0]
      span: [172, 2, 27]
      leading_comments: " Item names in the database.\n"
    }
    location {
      path: [4, 13, 2, 0, 4]
      span: [172, 2, 170, 36]
    }
    location {
      path: [4, 13, 2, 0, 6]
      span: [172, 2, 16]
    }
    location {
      path: [4, 13, 2, 0, 1]
      span: [172, 17, 22]
    }
    location {
      path: [4, 13, 2, 0, 3]
      span: [172, 25, 26]
    }
    location {
      path: [4, 13, 2, 1]
      span: [175, 2, 26]
      leading_comments: " Current version of the database.\n"
    }
    location {
      path: [4, 13, 2, 1, 4]
      span: [175, 2, 172, 27]
    }
    location {
      path: [4, 13, 2, 1, 5]
      span: [175, 2, 8]
    }
    location {
      path: [4, 13, 2, 1, 1]
      span: [175, 9, 21]
    }
    location {
      path: [4, 13, 2, 1, 3]
      span: [175, 24, 25]
    }
    location {
      path: [4, 14]
      span: [178, 0, 184, 1]
    }
    location {
      path: [4, 14, 1]
      span: [178, 8, 31]
    }
    location {
      path: [4, 14, 2, 0]
      span: [180, 2, 18]
      leading_comments: " Session key for the user informing about request.\n"
    }
    location {
      path: [4, 14, 2, 0, 4]
      span: [180, 2, 178, 33]
    }
    location {
      path: [4, 14, 2, 0, 5]
      span: [180, 2, 7]
    }
    location {
      path: [4, 14, 2, 0, 1]
      span: [180, 8, 13]
    }
    location {
      path: [4, 14, 2, 0, 3]
      span: [180, 16, 17]
    }
    location {
      path: [4, 14, 2, 1]
      span: [183, 2, 20]
      leading_comments: " Choice of the user.\n"
    }
    location {
      path: [4, 14, 2, 1, 4]
      span: [183, 2, 180, 18]
    }
    location {
      path: [4, 14, 2, 1, 6]
      span: [183, 2, 8]
    }
    location {
      path: [4, 14, 2, 1, 1]
      span: [183, 9, 15]
    }
    location {
      path: [4, 14, 2, 1, 3]
      span: [183, 18, 19]
    }
    location {
      path: [4, 15]
      span: [186, 0, 189, 1]
    }
    location {
      path: [4, 15, 1]
      span: [186, 8, 29]
    }
    location {
      path: [4, 15, 2, 0]
      span: [188, 2, 23]
      leading_comments: " Database id of the user choice.\n"
    }
    location {
      path: [4, 15, 2, 0, 4]
      span: [188, 2, 186, 31]
    }
    location {
      path: [4, 15, 2, 0, 5]
      span: [188, 2, 8]
    }
    location {
      path: [4, 15, 2, 0, 1]
      span: [188, 9, 18]
    }
    location {
      path: [4, 15, 2, 0, 3]
      span: [188, 21, 22]
    }
    location {
      path: [4, 16]
      span: [191, 0, 197, 1]
    }
    location {
      path: [4, 16, 1]
      span: [191, 8, 31]
    }
    location {
      path: [4, 16, 2, 0]
      span: [193, 2, 18]
      leading_comments: " Session key for the user requesting the fetch.\n"
    }
    location {
      path: [4, 16, 2, 0, 4]
      span: [193, 2, 191, 33]
    }
    location {
      path: [4, 16, 2, 0, 5]
      span: [193, 2, 7]
    }
    location {
      path: [4, 16, 2, 0, 1]
      span: [193, 8, 13]
    }
    location {
      path: [4, 16, 2, 0, 3]
      span: [193, 16, 17]
    }
    location {
      path: [4, 16, 2, 1]
      span: [196, 2, 25]
      leading_comments: " Start index to fetch choice entries;\n"
    }
    location {
      path: [4, 16, 2, 1, 4]
      span: [196, 2, 193, 18]
    }
    location {
      path: [4, 16, 2, 1, 5]
      span: [196, 2, 8]
    }
    location {
      path: [4, 16, 2, 1, 1]
      span: [196, 9, 20]
    }
    location {
      path: [4, 16, 2, 1, 3]
      span: [196, 23, 24]
    }
    location {
      path: [4, 17]
      span: [199, 0, 202, 1]
    }
    location {
      path: [4, 17, 1]
      span: [199, 8, 29]
    }
    location {
      path: [4, 17, 2, 0]
      span: [201, 2, 31]
      leading_comments: " User history object.\n"
    }
    location {
      path: [4, 17, 2, 0, 4]
      span: [201, 2, 199, 31]
    }
    location {
      path: [4, 17, 2, 0, 6]
      span: [201, 2, 13]
    }
    location {
      path: [4, 17, 2, 0, 1]
      span: [201, 14, 26]
    }
    location {
      path: [4, 17, 2, 0, 3]
      span: [201, 29, 30]
    }
    location {
      path: [4, 18]
      span: [204, 0, 207, 1]
    }
    location {
      path: [4, 18, 1]
      span: [204, 8, 25]
    }
    location {
      path: [4, 18, 2, 0]
      span: [206, 2, 18]
      leading_comments: " Session token to be checked.\n"
    }
    location {
      path: [4, 18, 2, 0, 4]
      span: [206, 2, 204, 27]
    }
    location {
      path: [4, 18, 2, 0, 5]
      span: [206, 2, 7]
    }
    location {
      path: [4, 18, 2, 0, 1]
      span: [206, 8, 13]
    }
    location {
      path: [4, 18, 2, 0, 3]
      span: [206, 16, 17]
    }
    location {
      path: [4, 19]
      span: [209, 0, 215, 1]
    }
    location {
      path: [4, 19, 1]
      span: [209, 8, 29]
    }
    location {
      path: [4, 19, 2, 0]
      span: [211, 2, 18]
      leading_comments: " Session token of the user sending the feedback.\n"
    }
    location {
      path: [4, 19, 2, 0, 4]
      span: [211, 2, 209, 31]
    }
    location {
      path: [4, 19, 2, 0, 5]
      span: [211, 2, 7]
    }
    location {
      path: [4, 19, 2, 0, 1]
      span: [211, 8, 13]
    }
    location {
      path: [4, 19, 2, 0, 3]
      span: [211, 16, 17]
    }
    location {
      path: [4, 19, 2, 1]
      span: [214, 2, 33]
      leading_comments: " Information about the feedback.\n"
    }
    location {
      path: [4, 19, 2, 1, 4]
      span: [214, 2, 211, 18]
    }
    location {
      path: [4, 19, 2, 1, 6]
      span: [214, 2, 14]
    }
    location {
      path: [4, 19, 2, 1, 1]
      span: [214, 15, 28]
    }
    location {
      path: [4, 19, 2, 1, 3]
      span: [214, 31, 32]
    }
    location {
      path: [4, 20]
      span: [217, 0, 223, 1]
    }
    location {
      path: [4, 20, 1]
      span: [217, 8, 22]
    }
    location {
      path: [4, 20, 2, 0]
      span: [219, 2, 18]
      leading_comments: " Token of the user making request.\n"
    }
    location {
      path: [4, 20, 2, 0, 4]
      span: [219, 2, 217, 24]
    }
    location {
      path: [4, 20, 2, 0, 5]
      span: [219, 2, 7]
    }
    location {
      path: [4, 20, 2, 0, 1]
      span: [219, 8, 13]
    }
    location {
      path: [4, 20, 2, 0, 3]
      span: [219, 16, 17]
    }
    location {
      path: [4, 20, 2, 1]
      span: [222, 2, 25]
      leading_comments: " Start index to fetch tags. start_index is exclusive.\n"
    }
    location {
      path: [4, 20, 2, 1, 4]
      span: [222, 2, 219, 18]
    }
    location {
      path: [4, 20, 2, 1, 5]
      span: [222, 2, 8]
    }
    location {
      path: [4, 20, 2, 1, 1]
      span: [222, 9, 20]
    }
    location {
      path: [4, 20, 2, 1, 3]
      span: [222, 23, 24]
    }
    location {
      path: [4, 21]
      span: [225, 0, 228, 1]
    }
    location {
      path: [4, 21, 1]
      span: [225, 8, 20]
    }
    location {
      path: [4, 21, 2, 0]
      span: [227, 2, 28]
      leading_comments: " Tags in the database both id and names.\n"
    }
    location {
      path: [4, 21, 2, 0, 4]
      span: [227, 2, 10]
    }
    location {
      path: [4, 21, 2, 0, 6]
      span: [227, 11, 14]
    }
    location {
      path: [4, 21, 2, 0, 1]
      span: [227, 15, 23]
    }
    location {
      path: [4, 21, 2, 0, 3]
      span: [227, 26, 27]
    }
    location {
      path: [4, 22]
      span: [230, 0, 233, 1]
    }
    location {
      path: [4, 22, 1]
      span: [230, 8, 43]
    }
    location {
      path: [4, 22, 2, 0]
      span: [232, 2, 18]
      leading_comments: " Token of the user making request.\n"
    }
    location {
      path: [4, 22, 2, 0, 4]
      span: [232, 2, 230, 45]
    }
    location {
      path: [4, 22, 2, 0, 5]
      span: [232, 2, 7]
    }
    location {
      path: [4, 22, 2, 0, 1]
      span: [232, 8, 13]
    }
    location {
      path: [4, 22, 2, 0, 3]
      span: [232, 16, 17]
    }
    location {
      path: [4, 23]
      span: [235, 0, 237, 1]
    }
    location {
      path: [4, 23, 1]
      span: [235, 8, 41]
    }
    location {
      path: [4, 23, 2, 0]
      span: [236, 2, 29]
    }
    location {
      path: [4, 23, 2, 0, 4]
      span: [236, 2, 235, 43]
    }
    location {
      path: [4, 23, 2, 0, 5]
      span: [236, 2, 6]
    }
    location {
      path: [4, 23, 2, 0, 1]
      span: [236, 7, 24]
    }
    location {
      path: [4, 23, 2, 0, 3]
      span: [236, 27, 28]
    }
    location {
      path: [4, 24]
      span: [239, 0, 244, 1]
    }
    location {
      path: [4, 24, 1]
      span: [239, 8, 35]
    }
    location {
      path: [4, 24, 2, 0]
      span: [241, 2, 18]
      leading_comments: " Token of the user making request.\n"
    }
    location {
      path: [4, 24, 2, 0, 4]
      span: [241, 2, 239, 37]
    }
    location {
      path: [4, 24, 2, 0, 5]
      span: [241, 2, 7]
    }
    location {
      path: [4, 24, 2, 0, 1]
      span: [241, 8, 13]
    }
    location {
      path: [4, 24, 2, 0, 3]
      span: [241, 16, 17]
    }
    location {
      path: [4, 24, 2, 1]
      span: [243, 2, 60]
      leading_comments: " Category for which the user requests GetColdStartItemList.\n"
    }
    location {
      path: [4, 24, 2, 1, 4]
      span: [243, 2, 241, 18]
    }
    location {
      path: [4, 24, 2, 1, 6]
      span: [243, 2, 31]
    }
    location {
      path: [4, 24, 2, 1, 1]
      span: [243, 32, 55]
    }
    location {
      path: [4, 24, 2, 1, 3]
      span: [243, 58, 59]
    }
    location {
      path: [4, 25]
      span: [246, 0, 249, 1]
    }
    location {
      path: [4, 25, 1]
      span: [246, 8, 33]
    }
    location {
      path: [4, 25, 2, 0]
      span: [248, 2, 41]
      leading_comments: " List of cold start items.\n"
    }
    location {
      path: [4, 25, 2, 0, 4]
      span: [248, 2, 246, 35]
    }
    location {
      path: [4, 25, 2, 0, 6]
      span: [248, 2, 16]
    }
    location {
      path: [4, 25, 2, 0, 1]
      span: [248, 17, 36]
    }
    location {
      path: [4, 25, 2, 0, 3]
      span: [248, 39, 40]
    }
    location {
      path: [4, 26]
      span: [251, 0, 258, 1]
    }
    location {
      path: [4, 26, 1]
      span: [251, 8, 36]
    }
    location {
      path: [4, 26, 2, 0]
      span: [253, 2, 18]
      leading_comments: " Token of the user making request.\n"
    }
    location {
      path: [4, 26, 2, 0, 4]
      span: [253, 2, 251, 38]
    }
    location {
      path: [4, 26, 2, 0, 5]
      span: [253, 2, 7]
    }
    location {
      path: [4, 26, 2, 0, 1]
      span: [253, 8, 13]
    }
    location {
      path: [4, 26, 2, 0, 3]
      span: [253, 16, 17]
    }
    location {
      path: [4, 26, 2, 1]
      span: [255, 2, 32]
      leading_comments: " Cold Start item\n"
    }
    location {
      path: [4, 26, 2, 1, 4]
      span: [255, 2, 253, 18]
    }
    location {
      path: [4, 26, 2, 1, 6]
      span: [255, 2, 12]
    }
    location {
      path: [4, 26, 2, 1, 1]
      span: [255, 13, 27]
    }
    location {
      path: [4, 26, 2, 1, 3]
      span: [255, 30, 31]
    }
    location {
      path: [4, 26, 2, 2]
      span: [257, 2, 37]
      leading_comments: " Feedback for coldstart_item\n"
    }
    location {
      path: [4, 26, 2, 2, 4]
      span: [257, 2, 255, 32]
    }
    location {
      path: [4, 26, 2, 2, 6]
      span: [257, 2, 23]
    }
    location {
      path: [4, 26, 2, 2, 1]
      span: [257, 24, 32]
    }
    location {
      path: [4, 26, 2, 2, 3]
      span: [257, 35, 36]
    }
  }
  syntax: "proto3"
}
