# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/backend.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import user_pb2 as protos_dot_user__pb2
from . import suggestion_pb2 as protos_dot_suggestion__pb2
from . import user_history_pb2 as protos_dot_user__history__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='protos/backend.proto',
  package='neva.backend',
  syntax='proto3',
  serialized_pb=_b('\n\x14protos/backend.proto\x12\x0cneva.backend\x1a\x11protos/user.proto\x1a\x17protos/suggestion.proto\x1a\x19protos/user_history.proto\"\x0e\n\x0cGenericReply\"3\n\x0fRegisterRequest\x12 \n\x04user\x18\x01 \x01(\x0b\x32\x12.neva.backend.User\"\xb9\x01\n\x0cLoginRequest\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12J\n\x13\x61uthentication_type\x18\x03 \x01(\x0e\x32-.neva.backend.LoginRequest.AuthenticationType\"<\n\x12\x41uthenticationType\x12\x0b\n\x07INVALID\x10\x00\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x01\x12\x0c\n\x08\x46\x41\x43\x45\x42OOK\x10\x02\"\x1b\n\nLoginReply\x12\r\n\x05token\x18\x01 \x01(\x0c\"D\n\x11UpdateUserRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12 \n\x04user\x18\x02 \x01(\x0b\x32\x12.neva.backend.User\"\x1f\n\x0eGetUserRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\"0\n\x0cGetUserReply\x12 \n\x04user\x18\x01 \x01(\x0b\x32\x12.neva.backend.User\"_\n SuggestionItemPropositionRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12,\n\nsuggestion\x18\x02 \x01(\x0b\x32\x18.neva.backend.Suggestion\"x\n\x1dGetMultipleSuggestionsRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12H\n\x13suggestion_category\x18\x02 \x01(\x0e\x32+.neva.backend.Suggestion.SuggestionCategory\"O\n\x1bGetMultipleSuggestionsReply\x12\x30\n\nsuggestion\x18\x01 \x01(\x0b\x32\x1c.neva.backend.SuggestionList\"3\n\x15TagPropositionRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12\x0b\n\x03tag\x18\x02 \x01(\t\"`\n\x1aTagValuePropositionRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12\x0e\n\x06tag_id\x18\x02 \x01(\r\x12\x14\n\x0csuggestee_id\x18\x03 \x01(\r\x12\r\n\x05value\x18\x04 \x01(\t\"\x8c\x01\n\x1cGetSuggestionItemListRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12H\n\x13suggestion_category\x18\x02 \x01(\x0e\x32+.neva.backend.Suggestion.SuggestionCategory\x12\x13\n\x0bstart_index\x18\x03 \x01(\r\"_\n\x1aGetSuggestionItemListReply\x12+\n\x05items\x18\x01 \x01(\x0b\x32\x1c.neva.backend.SuggestionList\x12\x14\n\x0clast_updated\x18\x02 \x01(\r\"N\n\x17InformUserChoiceRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12$\n\x06\x63hoice\x18\x02 \x01(\x0b\x32\x14.neva.backend.Choice\"*\n\x15InformUserChoiceReply\x12\x11\n\tchoice_id\x18\x01 \x01(\r\"=\n\x17\x46\x65tchUserHistoryRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12\x13\n\x0bstart_index\x18\x02 \x01(\r\"H\n\x15\x46\x65tchUserHistoryReply\x12/\n\x0cuser_history\x18\x01 \x01(\x0b\x32\x19.neva.backend.UserHistory\"\"\n\x11\x43heckTokenRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\"Y\n\x15RecordFeedbackRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12\x31\n\ruser_feedback\x18\x02 \x01(\x0b\x32\x1a.neva.backend.UserFeedback\"4\n\x0eGetTagsRequest\x12\r\n\x05token\x18\x01 \x01(\x0c\x12\x13\n\x0bstart_index\x18\x02 \x01(\r\"3\n\x0cGetTagsReply\x12#\n\x08tag_list\x18\x01 \x03(\x0b\x32\x11.neva.backend.Tag2\xd8\t\n\x07\x42\x61\x63kend\x12G\n\x08Register\x12\x1d.neva.backend.RegisterRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12?\n\x05Login\x12\x1a.neva.backend.LoginRequest\x1a\x18.neva.backend.LoginReply\"\x00\x12K\n\nUpdateUser\x12\x1f.neva.backend.UpdateUserRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12\x45\n\x07GetUser\x12\x1c.neva.backend.GetUserRequest\x1a\x1a.neva.backend.GetUserReply\"\x00\x12i\n\x19SuggestionItemProposition\x12..neva.backend.SuggestionItemPropositionRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12r\n\x16GetMultipleSuggestions\x12+.neva.backend.GetMultipleSuggestionsRequest\x1a).neva.backend.GetMultipleSuggestionsReply\"\x00\x12S\n\x0eTagProposition\x12#.neva.backend.TagPropositionRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12]\n\x13TagValueProposition\x12(.neva.backend.TagValuePropositionRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12o\n\x15GetSuggestionItemList\x12*.neva.backend.GetSuggestionItemListRequest\x1a(.neva.backend.GetSuggestionItemListReply\"\x00\x12`\n\x10InformUserChoice\x12%.neva.backend.InformUserChoiceRequest\x1a#.neva.backend.InformUserChoiceReply\"\x00\x12`\n\x10\x46\x65tchUserHistory\x12%.neva.backend.FetchUserHistoryRequest\x1a#.neva.backend.FetchUserHistoryReply\"\x00\x12K\n\nCheckToken\x12\x1f.neva.backend.CheckTokenRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12S\n\x0eRecordFeedback\x12#.neva.backend.RecordFeedbackRequest\x1a\x1a.neva.backend.GenericReply\"\x00\x12\x45\n\x07GetTags\x12\x1c.neva.backend.GetTagsRequest\x1a\x1a.neva.backend.GetTagsReply\"\x00\x62\x06proto3')
  ,
  dependencies=[protos_dot_user__pb2.DESCRIPTOR,protos_dot_suggestion__pb2.DESCRIPTOR,protos_dot_user__history__pb2.DESCRIPTOR,])



_LOGINREQUEST_AUTHENTICATIONTYPE = _descriptor.EnumDescriptor(
  name='AuthenticationType',
  full_name='neva.backend.LoginRequest.AuthenticationType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FACEBOOK', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=304,
  serialized_end=364,
)
_sym_db.RegisterEnumDescriptor(_LOGINREQUEST_AUTHENTICATIONTYPE)


_GENERICREPLY = _descriptor.Descriptor(
  name='GenericReply',
  full_name='neva.backend.GenericReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=123,
)


_REGISTERREQUEST = _descriptor.Descriptor(
  name='RegisterRequest',
  full_name='neva.backend.RegisterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='neva.backend.RegisterRequest.user', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=176,
)


_LOGINREQUEST = _descriptor.Descriptor(
  name='LoginRequest',
  full_name='neva.backend.LoginRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email', full_name='neva.backend.LoginRequest.email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='password', full_name='neva.backend.LoginRequest.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='authentication_type', full_name='neva.backend.LoginRequest.authentication_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGINREQUEST_AUTHENTICATIONTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=179,
  serialized_end=364,
)


_LOGINREPLY = _descriptor.Descriptor(
  name='LoginReply',
  full_name='neva.backend.LoginReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.LoginReply.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=366,
  serialized_end=393,
)


_UPDATEUSERREQUEST = _descriptor.Descriptor(
  name='UpdateUserRequest',
  full_name='neva.backend.UpdateUserRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.UpdateUserRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='neva.backend.UpdateUserRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=395,
  serialized_end=463,
)


_GETUSERREQUEST = _descriptor.Descriptor(
  name='GetUserRequest',
  full_name='neva.backend.GetUserRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.GetUserRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=465,
  serialized_end=496,
)


_GETUSERREPLY = _descriptor.Descriptor(
  name='GetUserReply',
  full_name='neva.backend.GetUserReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='neva.backend.GetUserReply.user', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=498,
  serialized_end=546,
)


_SUGGESTIONITEMPROPOSITIONREQUEST = _descriptor.Descriptor(
  name='SuggestionItemPropositionRequest',
  full_name='neva.backend.SuggestionItemPropositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.SuggestionItemPropositionRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='suggestion', full_name='neva.backend.SuggestionItemPropositionRequest.suggestion', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=548,
  serialized_end=643,
)


_GETMULTIPLESUGGESTIONSREQUEST = _descriptor.Descriptor(
  name='GetMultipleSuggestionsRequest',
  full_name='neva.backend.GetMultipleSuggestionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.GetMultipleSuggestionsRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='suggestion_category', full_name='neva.backend.GetMultipleSuggestionsRequest.suggestion_category', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=645,
  serialized_end=765,
)


_GETMULTIPLESUGGESTIONSREPLY = _descriptor.Descriptor(
  name='GetMultipleSuggestionsReply',
  full_name='neva.backend.GetMultipleSuggestionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='suggestion', full_name='neva.backend.GetMultipleSuggestionsReply.suggestion', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=767,
  serialized_end=846,
)


_TAGPROPOSITIONREQUEST = _descriptor.Descriptor(
  name='TagPropositionRequest',
  full_name='neva.backend.TagPropositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.TagPropositionRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='neva.backend.TagPropositionRequest.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=848,
  serialized_end=899,
)


_TAGVALUEPROPOSITIONREQUEST = _descriptor.Descriptor(
  name='TagValuePropositionRequest',
  full_name='neva.backend.TagValuePropositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.TagValuePropositionRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag_id', full_name='neva.backend.TagValuePropositionRequest.tag_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='suggestee_id', full_name='neva.backend.TagValuePropositionRequest.suggestee_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='neva.backend.TagValuePropositionRequest.value', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=901,
  serialized_end=997,
)


_GETSUGGESTIONITEMLISTREQUEST = _descriptor.Descriptor(
  name='GetSuggestionItemListRequest',
  full_name='neva.backend.GetSuggestionItemListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.GetSuggestionItemListRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='suggestion_category', full_name='neva.backend.GetSuggestionItemListRequest.suggestion_category', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_index', full_name='neva.backend.GetSuggestionItemListRequest.start_index', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1000,
  serialized_end=1140,
)


_GETSUGGESTIONITEMLISTREPLY = _descriptor.Descriptor(
  name='GetSuggestionItemListReply',
  full_name='neva.backend.GetSuggestionItemListReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='neva.backend.GetSuggestionItemListReply.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_updated', full_name='neva.backend.GetSuggestionItemListReply.last_updated', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1142,
  serialized_end=1237,
)


_INFORMUSERCHOICEREQUEST = _descriptor.Descriptor(
  name='InformUserChoiceRequest',
  full_name='neva.backend.InformUserChoiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.InformUserChoiceRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='choice', full_name='neva.backend.InformUserChoiceRequest.choice', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1239,
  serialized_end=1317,
)


_INFORMUSERCHOICEREPLY = _descriptor.Descriptor(
  name='InformUserChoiceReply',
  full_name='neva.backend.InformUserChoiceReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='choice_id', full_name='neva.backend.InformUserChoiceReply.choice_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1319,
  serialized_end=1361,
)


_FETCHUSERHISTORYREQUEST = _descriptor.Descriptor(
  name='FetchUserHistoryRequest',
  full_name='neva.backend.FetchUserHistoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.FetchUserHistoryRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_index', full_name='neva.backend.FetchUserHistoryRequest.start_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1363,
  serialized_end=1424,
)


_FETCHUSERHISTORYREPLY = _descriptor.Descriptor(
  name='FetchUserHistoryReply',
  full_name='neva.backend.FetchUserHistoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_history', full_name='neva.backend.FetchUserHistoryReply.user_history', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1426,
  serialized_end=1498,
)


_CHECKTOKENREQUEST = _descriptor.Descriptor(
  name='CheckTokenRequest',
  full_name='neva.backend.CheckTokenRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.CheckTokenRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1500,
  serialized_end=1534,
)


_RECORDFEEDBACKREQUEST = _descriptor.Descriptor(
  name='RecordFeedbackRequest',
  full_name='neva.backend.RecordFeedbackRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.RecordFeedbackRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_feedback', full_name='neva.backend.RecordFeedbackRequest.user_feedback', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1536,
  serialized_end=1625,
)


_GETTAGSREQUEST = _descriptor.Descriptor(
  name='GetTagsRequest',
  full_name='neva.backend.GetTagsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='neva.backend.GetTagsRequest.token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_index', full_name='neva.backend.GetTagsRequest.start_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1627,
  serialized_end=1679,
)


_GETTAGSREPLY = _descriptor.Descriptor(
  name='GetTagsReply',
  full_name='neva.backend.GetTagsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tag_list', full_name='neva.backend.GetTagsReply.tag_list', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1681,
  serialized_end=1732,
)

_REGISTERREQUEST.fields_by_name['user'].message_type = protos_dot_user__pb2._USER
_LOGINREQUEST.fields_by_name['authentication_type'].enum_type = _LOGINREQUEST_AUTHENTICATIONTYPE
_LOGINREQUEST_AUTHENTICATIONTYPE.containing_type = _LOGINREQUEST
_UPDATEUSERREQUEST.fields_by_name['user'].message_type = protos_dot_user__pb2._USER
_GETUSERREPLY.fields_by_name['user'].message_type = protos_dot_user__pb2._USER
_SUGGESTIONITEMPROPOSITIONREQUEST.fields_by_name['suggestion'].message_type = protos_dot_suggestion__pb2._SUGGESTION
_GETMULTIPLESUGGESTIONSREQUEST.fields_by_name['suggestion_category'].enum_type = protos_dot_suggestion__pb2._SUGGESTION_SUGGESTIONCATEGORY
_GETMULTIPLESUGGESTIONSREPLY.fields_by_name['suggestion'].message_type = protos_dot_suggestion__pb2._SUGGESTIONLIST
_GETSUGGESTIONITEMLISTREQUEST.fields_by_name['suggestion_category'].enum_type = protos_dot_suggestion__pb2._SUGGESTION_SUGGESTIONCATEGORY
_GETSUGGESTIONITEMLISTREPLY.fields_by_name['items'].message_type = protos_dot_suggestion__pb2._SUGGESTIONLIST
_INFORMUSERCHOICEREQUEST.fields_by_name['choice'].message_type = protos_dot_user__history__pb2._CHOICE
_FETCHUSERHISTORYREPLY.fields_by_name['user_history'].message_type = protos_dot_user__history__pb2._USERHISTORY
_RECORDFEEDBACKREQUEST.fields_by_name['user_feedback'].message_type = protos_dot_user__history__pb2._USERFEEDBACK
_GETTAGSREPLY.fields_by_name['tag_list'].message_type = protos_dot_suggestion__pb2._TAG
DESCRIPTOR.message_types_by_name['GenericReply'] = _GENERICREPLY
DESCRIPTOR.message_types_by_name['RegisterRequest'] = _REGISTERREQUEST
DESCRIPTOR.message_types_by_name['LoginRequest'] = _LOGINREQUEST
DESCRIPTOR.message_types_by_name['LoginReply'] = _LOGINREPLY
DESCRIPTOR.message_types_by_name['UpdateUserRequest'] = _UPDATEUSERREQUEST
DESCRIPTOR.message_types_by_name['GetUserRequest'] = _GETUSERREQUEST
DESCRIPTOR.message_types_by_name['GetUserReply'] = _GETUSERREPLY
DESCRIPTOR.message_types_by_name['SuggestionItemPropositionRequest'] = _SUGGESTIONITEMPROPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['GetMultipleSuggestionsRequest'] = _GETMULTIPLESUGGESTIONSREQUEST
DESCRIPTOR.message_types_by_name['GetMultipleSuggestionsReply'] = _GETMULTIPLESUGGESTIONSREPLY
DESCRIPTOR.message_types_by_name['TagPropositionRequest'] = _TAGPROPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['TagValuePropositionRequest'] = _TAGVALUEPROPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['GetSuggestionItemListRequest'] = _GETSUGGESTIONITEMLISTREQUEST
DESCRIPTOR.message_types_by_name['GetSuggestionItemListReply'] = _GETSUGGESTIONITEMLISTREPLY
DESCRIPTOR.message_types_by_name['InformUserChoiceRequest'] = _INFORMUSERCHOICEREQUEST
DESCRIPTOR.message_types_by_name['InformUserChoiceReply'] = _INFORMUSERCHOICEREPLY
DESCRIPTOR.message_types_by_name['FetchUserHistoryRequest'] = _FETCHUSERHISTORYREQUEST
DESCRIPTOR.message_types_by_name['FetchUserHistoryReply'] = _FETCHUSERHISTORYREPLY
DESCRIPTOR.message_types_by_name['CheckTokenRequest'] = _CHECKTOKENREQUEST
DESCRIPTOR.message_types_by_name['RecordFeedbackRequest'] = _RECORDFEEDBACKREQUEST
DESCRIPTOR.message_types_by_name['GetTagsRequest'] = _GETTAGSREQUEST
DESCRIPTOR.message_types_by_name['GetTagsReply'] = _GETTAGSREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GenericReply = _reflection.GeneratedProtocolMessageType('GenericReply', (_message.Message,), dict(
  DESCRIPTOR = _GENERICREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GenericReply)
  ))
_sym_db.RegisterMessage(GenericReply)

RegisterRequest = _reflection.GeneratedProtocolMessageType('RegisterRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.RegisterRequest)
  ))
_sym_db.RegisterMessage(RegisterRequest)

LoginRequest = _reflection.GeneratedProtocolMessageType('LoginRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOGINREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.LoginRequest)
  ))
_sym_db.RegisterMessage(LoginRequest)

LoginReply = _reflection.GeneratedProtocolMessageType('LoginReply', (_message.Message,), dict(
  DESCRIPTOR = _LOGINREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.LoginReply)
  ))
_sym_db.RegisterMessage(LoginReply)

UpdateUserRequest = _reflection.GeneratedProtocolMessageType('UpdateUserRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEUSERREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.UpdateUserRequest)
  ))
_sym_db.RegisterMessage(UpdateUserRequest)

GetUserRequest = _reflection.GeneratedProtocolMessageType('GetUserRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetUserRequest)
  ))
_sym_db.RegisterMessage(GetUserRequest)

GetUserReply = _reflection.GeneratedProtocolMessageType('GetUserReply', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetUserReply)
  ))
_sym_db.RegisterMessage(GetUserReply)

SuggestionItemPropositionRequest = _reflection.GeneratedProtocolMessageType('SuggestionItemPropositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _SUGGESTIONITEMPROPOSITIONREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.SuggestionItemPropositionRequest)
  ))
_sym_db.RegisterMessage(SuggestionItemPropositionRequest)

GetMultipleSuggestionsRequest = _reflection.GeneratedProtocolMessageType('GetMultipleSuggestionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETMULTIPLESUGGESTIONSREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetMultipleSuggestionsRequest)
  ))
_sym_db.RegisterMessage(GetMultipleSuggestionsRequest)

GetMultipleSuggestionsReply = _reflection.GeneratedProtocolMessageType('GetMultipleSuggestionsReply', (_message.Message,), dict(
  DESCRIPTOR = _GETMULTIPLESUGGESTIONSREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetMultipleSuggestionsReply)
  ))
_sym_db.RegisterMessage(GetMultipleSuggestionsReply)

TagPropositionRequest = _reflection.GeneratedProtocolMessageType('TagPropositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _TAGPROPOSITIONREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.TagPropositionRequest)
  ))
_sym_db.RegisterMessage(TagPropositionRequest)

TagValuePropositionRequest = _reflection.GeneratedProtocolMessageType('TagValuePropositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _TAGVALUEPROPOSITIONREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.TagValuePropositionRequest)
  ))
_sym_db.RegisterMessage(TagValuePropositionRequest)

GetSuggestionItemListRequest = _reflection.GeneratedProtocolMessageType('GetSuggestionItemListRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSUGGESTIONITEMLISTREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetSuggestionItemListRequest)
  ))
_sym_db.RegisterMessage(GetSuggestionItemListRequest)

GetSuggestionItemListReply = _reflection.GeneratedProtocolMessageType('GetSuggestionItemListReply', (_message.Message,), dict(
  DESCRIPTOR = _GETSUGGESTIONITEMLISTREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetSuggestionItemListReply)
  ))
_sym_db.RegisterMessage(GetSuggestionItemListReply)

InformUserChoiceRequest = _reflection.GeneratedProtocolMessageType('InformUserChoiceRequest', (_message.Message,), dict(
  DESCRIPTOR = _INFORMUSERCHOICEREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.InformUserChoiceRequest)
  ))
_sym_db.RegisterMessage(InformUserChoiceRequest)

InformUserChoiceReply = _reflection.GeneratedProtocolMessageType('InformUserChoiceReply', (_message.Message,), dict(
  DESCRIPTOR = _INFORMUSERCHOICEREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.InformUserChoiceReply)
  ))
_sym_db.RegisterMessage(InformUserChoiceReply)

FetchUserHistoryRequest = _reflection.GeneratedProtocolMessageType('FetchUserHistoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _FETCHUSERHISTORYREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.FetchUserHistoryRequest)
  ))
_sym_db.RegisterMessage(FetchUserHistoryRequest)

FetchUserHistoryReply = _reflection.GeneratedProtocolMessageType('FetchUserHistoryReply', (_message.Message,), dict(
  DESCRIPTOR = _FETCHUSERHISTORYREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.FetchUserHistoryReply)
  ))
_sym_db.RegisterMessage(FetchUserHistoryReply)

CheckTokenRequest = _reflection.GeneratedProtocolMessageType('CheckTokenRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHECKTOKENREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.CheckTokenRequest)
  ))
_sym_db.RegisterMessage(CheckTokenRequest)

RecordFeedbackRequest = _reflection.GeneratedProtocolMessageType('RecordFeedbackRequest', (_message.Message,), dict(
  DESCRIPTOR = _RECORDFEEDBACKREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.RecordFeedbackRequest)
  ))
_sym_db.RegisterMessage(RecordFeedbackRequest)

GetTagsRequest = _reflection.GeneratedProtocolMessageType('GetTagsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETTAGSREQUEST,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetTagsRequest)
  ))
_sym_db.RegisterMessage(GetTagsRequest)

GetTagsReply = _reflection.GeneratedProtocolMessageType('GetTagsReply', (_message.Message,), dict(
  DESCRIPTOR = _GETTAGSREPLY,
  __module__ = 'protos.backend_pb2'
  # @@protoc_insertion_point(class_scope:neva.backend.GetTagsReply)
  ))
_sym_db.RegisterMessage(GetTagsReply)



_BACKEND = _descriptor.ServiceDescriptor(
  name='Backend',
  full_name='neva.backend.Backend',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1735,
  serialized_end=2975,
  methods=[
  _descriptor.MethodDescriptor(
    name='Register',
    full_name='neva.backend.Backend.Register',
    index=0,
    containing_service=None,
    input_type=_REGISTERREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Login',
    full_name='neva.backend.Backend.Login',
    index=1,
    containing_service=None,
    input_type=_LOGINREQUEST,
    output_type=_LOGINREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateUser',
    full_name='neva.backend.Backend.UpdateUser',
    index=2,
    containing_service=None,
    input_type=_UPDATEUSERREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetUser',
    full_name='neva.backend.Backend.GetUser',
    index=3,
    containing_service=None,
    input_type=_GETUSERREQUEST,
    output_type=_GETUSERREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SuggestionItemProposition',
    full_name='neva.backend.Backend.SuggestionItemProposition',
    index=4,
    containing_service=None,
    input_type=_SUGGESTIONITEMPROPOSITIONREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetMultipleSuggestions',
    full_name='neva.backend.Backend.GetMultipleSuggestions',
    index=5,
    containing_service=None,
    input_type=_GETMULTIPLESUGGESTIONSREQUEST,
    output_type=_GETMULTIPLESUGGESTIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TagProposition',
    full_name='neva.backend.Backend.TagProposition',
    index=6,
    containing_service=None,
    input_type=_TAGPROPOSITIONREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TagValueProposition',
    full_name='neva.backend.Backend.TagValueProposition',
    index=7,
    containing_service=None,
    input_type=_TAGVALUEPROPOSITIONREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSuggestionItemList',
    full_name='neva.backend.Backend.GetSuggestionItemList',
    index=8,
    containing_service=None,
    input_type=_GETSUGGESTIONITEMLISTREQUEST,
    output_type=_GETSUGGESTIONITEMLISTREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='InformUserChoice',
    full_name='neva.backend.Backend.InformUserChoice',
    index=9,
    containing_service=None,
    input_type=_INFORMUSERCHOICEREQUEST,
    output_type=_INFORMUSERCHOICEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FetchUserHistory',
    full_name='neva.backend.Backend.FetchUserHistory',
    index=10,
    containing_service=None,
    input_type=_FETCHUSERHISTORYREQUEST,
    output_type=_FETCHUSERHISTORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckToken',
    full_name='neva.backend.Backend.CheckToken',
    index=11,
    containing_service=None,
    input_type=_CHECKTOKENREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RecordFeedback',
    full_name='neva.backend.Backend.RecordFeedback',
    index=12,
    containing_service=None,
    input_type=_RECORDFEEDBACKREQUEST,
    output_type=_GENERICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTags',
    full_name='neva.backend.Backend.GetTags',
    index=13,
    containing_service=None,
    input_type=_GETTAGSREQUEST,
    output_type=_GETTAGSREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_BACKEND)

DESCRIPTOR.services_by_name['Backend'] = _BACKEND

# @@protoc_insertion_point(module_scope)
